name: (DEV) Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: public.ecr.aws/z7r1b9v0/simple_loading
  ECR_REPOSITORY: simple_loading
  ECS_SERVICE_NAME: simple-loading
  ECS_CLUSTER_NAME: pocCluster
  TASK_DEFINITION_NAME: simple-load
  DOCKER_FILE_NAME: Dockerfile

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Build Version
        id: vars
        run: echo ::set-output name=VERSION::$(cat VERSION)

      - name: Download Task Definition Template
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_DEFINITION_NAME }} \
            --query taskDefinition \
            > task-definition.json

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}:${{ steps.vars.outputs.VERSION }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: ${{ env.ECS_SERVICE_NAME }}
          cluster: ${{ env.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
          force-new-deployment: true
